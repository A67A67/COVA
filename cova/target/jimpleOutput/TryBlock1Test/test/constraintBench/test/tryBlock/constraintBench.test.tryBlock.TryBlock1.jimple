public class constraintBench.test.tryBlock.TryBlock1 extends java.lang.Object
{

    public void <init>()
    {
        constraintBench.test.tryBlock.TryBlock1 this;

        this := @this: constraintBench.test.tryBlock.TryBlock1;

        specialinvoke this.<java.lang.Object: void <init>()>();
/*9*/

        return;
/*9*/
    }

    public void test()
    {
        constraintBench.test.tryBlock.TryBlock1 this;
        boolean a;
        java.io.PrintStream $r0, $r3;
        java.lang.Exception $r1, $r2;

        this := @this: constraintBench.test.tryBlock.TryBlock1;
/*
 *		-1.
true
*/

        a = staticinvoke <constraintBench.utils.Configuration: boolean featureA()>();
/*
 *		12.
true
*/

        if a == 0 goto label3;
/*
 *		13.
true
*/

     label1:
        $r1 = new java.lang.Exception;
/*
 *		15.
C1001
*/

        specialinvoke $r1.<java.lang.Exception: void <init>()>();
/*
 *		15.
C1001
*/

        throw $r1;
/*
 *		15.
C1001
*/

     label2:
        $r2 := @caughtexception;
/*
 *		15.
C1001
*/

        $r3 = <java.lang.System: java.io.PrintStream out>;
/*
 *		17.
C1001
*/

        virtualinvoke $r3.<java.io.PrintStream: void println()>();
/*
 *		17.
C1001
*/

     label3:
        $r0 = <java.lang.System: java.io.PrintStream out>;
/*
 *		20.
true
*/

        virtualinvoke $r0.<java.io.PrintStream: void println()>();
/*
 *		20.
true
*/

        return;
/*
 *		21.
true
*/

        catch java.lang.Exception from label1 to label2 with label2;
    }
}
