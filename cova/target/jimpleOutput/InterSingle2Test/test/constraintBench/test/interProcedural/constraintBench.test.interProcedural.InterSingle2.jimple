public class constraintBench.test.interProcedural.InterSingle2 extends java.lang.Object
{

    public void <init>()
    {
        constraintBench.test.interProcedural.InterSingle2 this;

        this := @this: constraintBench.test.interProcedural.InterSingle2;

        specialinvoke this.<java.lang.Object: void <init>()>();
/*9*/

        return;
/*9*/
    }

    public void test()
    {
        constraintBench.test.interProcedural.InterSingle2 this;
        boolean a, b1;
        java.io.PrintStream $r0;

        this := @this: constraintBench.test.interProcedural.InterSingle2;
/*
 *		-1.
true
*/

        a = staticinvoke <constraintBench.utils.Configuration: boolean featureA()>();
/*
 *		12.
true
*/

        b1 = specialinvoke this.<constraintBench.test.interProcedural.InterSingle2: boolean callee(boolean)>(a);
/*
 *		13.
true
*/

        if b1 == 0 goto label1;
/*
 *		14.
true
*/

        $r0 = <java.lang.System: java.io.PrintStream out>;
/*
 *		15.
C1001
*/

        virtualinvoke $r0.<java.io.PrintStream: void println()>();
/*
 *		15.
C1001
*/

     label1:
        return;
/*
 *		17.
true
*/
    }

    private boolean callee(boolean)
    {
        constraintBench.test.interProcedural.InterSingle2 this;
        boolean a, b, $z0;
        java.io.PrintStream $r0;

        this := @this: constraintBench.test.interProcedural.InterSingle2;
/*
 *		-1.
true
*/

        a := @parameter0: boolean;
/*
 *		-1.
true
*/

        if a == 0 goto label1;
/*
 *		20.
true
*/

        $z0 = 1;
/*
 *		24.
C1001
*/

        goto label2;
/*
 *		24.
C1001
*/

     label1:
        $z0 = 0;
/*
 *		24.
(not C1001)
*/

     label2:
        b = $z0;
/*
 *		20.
true
*/

        if b != 0 goto label3;
/*
 *		21.
true
*/

        $r0 = <java.lang.System: java.io.PrintStream out>;
/*
 *		22.
(not C1001)
*/

        virtualinvoke $r0.<java.io.PrintStream: void println()>();
/*
 *		22.
(not C1001)
*/

     label3:
        return a;
/*
 *		24.
true
*/
    }
}
