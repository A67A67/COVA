public class constraintBench.test.mixed.Mixed1 extends java.lang.Object
{

    public void <init>()
    {
        constraintBench.test.mixed.Mixed1 this;

        this := @this: constraintBench.test.mixed.Mixed1;

        specialinvoke this.<java.lang.Object: void <init>()>();
/*10*/

        return;
/*10*/
    }

    private int callee()
    {
        constraintBench.test.mixed.Mixed1 this;
        boolean $z0;

        this := @this: constraintBench.test.mixed.Mixed1;
/*
 *		-1.
true
*/

        $z0 = staticinvoke <constraintBench.utils.Configuration: boolean featureA()>();
/*
 *		34.
true
*/

        if $z0 == 0 goto label1;
/*
 *		34.
true
*/

        return 1;
/*
 *		35.
C1001
*/

     label1:
        return 0;
/*
 *		37.
(not C1001)
*/
    }

    public void test()
    {
        constraintBench.test.mixed.Mixed1 this;
        constraintBench.test.mixed.Mixed1$TestClass testClass, $r0;
        int i;
        java.io.PrintStream $r1;

        this := @this: constraintBench.test.mixed.Mixed1;
/*
 *		-1.
true
*/

        $r0 = new constraintBench.test.mixed.Mixed1$TestClass;
/*
 *		42.
true
*/

        specialinvoke $r0.<constraintBench.test.mixed.Mixed1$TestClass: void <init>(constraintBench.test.mixed.Mixed1)>(this);
/*
 *		42.
true
*/

        testClass = $r0;
/*
 *		42.
true
*/

        i = specialinvoke this.<constraintBench.test.mixed.Mixed1: int callee()>();
/*
 *		43.
true
*/

        virtualinvoke testClass.<constraintBench.test.mixed.Mixed1$TestClass: void onClick()>();
/*
 *		44.
true
*/

        if i <= 0 goto label1;
/*
 *		45.
U1001_0
*/

        virtualinvoke testClass.<constraintBench.test.mixed.Mixed1$TestClass: void onScroll()>();
/*
 *		46.
(and C1001 U1001_0)
*/

     label1:
        $r1 = <java.lang.System: java.io.PrintStream out>;
/*
 *		48.
(or (and (not C1001) U1001_0) (and C1001 U1001_0 U1002_0))
*/

        virtualinvoke $r1.<java.io.PrintStream: void println()>();
/*
 *		48.
(or (and (not C1001) U1001_0) (and C1001 U1001_0 U1002_0))
*/

        return;
/*
 *		49.
(or (and (not C1001) U1001_0) (and C1001 U1001_0 U1002_0))
*/
    }
}
