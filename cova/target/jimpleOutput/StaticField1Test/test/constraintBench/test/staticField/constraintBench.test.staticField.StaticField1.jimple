public class constraintBench.test.staticField.StaticField1 extends java.lang.Object
{

    public void <init>()
    {
        constraintBench.test.staticField.StaticField1 this;

        this := @this: constraintBench.test.staticField.StaticField1;

        specialinvoke this.<java.lang.Object: void <init>()>();
/*9*/

        return;
/*9*/
    }

    public void test()
    {
        constraintBench.test.staticField.StaticField1 this;
        boolean $z0, $z1, $z2;
        java.io.PrintStream $r0, $r1;

        this := @this: constraintBench.test.staticField.StaticField1;
/*
 *		-1.
true
*/

        $z0 = staticinvoke <constraintBench.utils.Configuration: boolean featureA()>();
/*
 *		16.
true
*/

        <constraintBench.test.staticField.StaticField1$TestClass: boolean f> = $z0;
/*
 *		16.
true
*/

        $z1 = <constraintBench.test.staticField.StaticField1$TestClass: boolean f>;
/*
 *		17.
true
*/

        if $z1 == 0 goto label1;
/*
 *		17.
true
*/

        $r1 = <java.lang.System: java.io.PrintStream out>;
/*
 *		18.
C1001
*/

        virtualinvoke $r1.<java.io.PrintStream: void println()>();
/*
 *		18.
C1001
*/

     label1:
        specialinvoke this.<constraintBench.test.staticField.StaticField1: void callee()>();
/*
 *		20.
true
*/

        $z2 = <constraintBench.test.staticField.StaticField1$TestClass: boolean f>;
/*
 *		21.
true
*/

        if $z2 == 0 goto label2;
/*
 *		21.
true
*/

        $r0 = <java.lang.System: java.io.PrintStream out>;
/*
 *		22.
C1002
*/

        virtualinvoke $r0.<java.io.PrintStream: void println()>();
/*
 *		22.
C1002
*/

     label2:
        return;
/*
 *		24.
true
*/
    }

    private void callee()
    {
        constraintBench.test.staticField.StaticField1 this;
        boolean $z0;

        this := @this: constraintBench.test.staticField.StaticField1;
/*
 *		-1.
true
*/

        $z0 = staticinvoke <constraintBench.utils.Configuration: boolean featureB()>();
/*
 *		27.
true
*/

        <constraintBench.test.staticField.StaticField1$TestClass: boolean f> = $z0;
/*
 *		27.
true
*/

        return;
/*
 *		28.
true
*/
    }
}
