public class constraintBench.test.tryBlock.TryBlock2 extends java.lang.Object
{

    public void <init>()
    {
        constraintBench.test.tryBlock.TryBlock2 this;

        this := @this: constraintBench.test.tryBlock.TryBlock2;

        specialinvoke this.<java.lang.Object: void <init>()>();
/*9*/

        return;
/*9*/
    }

    public void test() throws java.lang.IllegalStateException
    {
        constraintBench.test.tryBlock.TryBlock2 this;
        boolean a;
        int b;
        java.io.PrintStream $r0;
        double $d0;
        java.lang.IllegalStateException $r1;

        this := @this: constraintBench.test.tryBlock.TryBlock2;
/*
 *		-1.
true
*/

        a = staticinvoke <constraintBench.utils.Configuration: boolean featureA()>();
/*
 *		12.
true
*/

        if a == 0 goto label1;
/*
 *		13.
true
*/

        $d0 = staticinvoke <java.lang.Math: double random()>();
/*
 *		14.
C1001
*/

        b = (int) $d0;
/*
 *		14.
C1001
*/

        if b <= 0 goto label1;
/*
 *		15.
C1001
*/

        $r1 = new java.lang.IllegalStateException;
/*
 *		16.
C1001
*/

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();
/*
 *		16.
C1001
*/

        throw $r1;
/*
 *		16.
C1001
*/

     label1:
        $r0 = <java.lang.System: java.io.PrintStream out>;
/*
 *		19.
true
*/

        virtualinvoke $r0.<java.io.PrintStream: void println()>();
/*
 *		19.
true
*/

        return;
/*
 *		20.
true
*/
    }
}
