public class constraintBench.test.primTypes.BooleanMultiple5 extends java.lang.Object
{

    public void <init>()
    {
        constraintBench.test.primTypes.BooleanMultiple5 this;

        this := @this: constraintBench.test.primTypes.BooleanMultiple5;

        specialinvoke this.<java.lang.Object: void <init>()>();
/*9*/

        return;
/*9*/
    }

    public void test()
    {
        constraintBench.test.primTypes.BooleanMultiple5 this;
        boolean $z0, $z1, $z2;
        java.io.PrintStream $r0, $r1, $r2;

        this := @this: constraintBench.test.primTypes.BooleanMultiple5;
/*
 *		-1.
true
*/

        $z0 = staticinvoke <constraintBench.utils.Configuration: boolean featureA()>();
/*
 *		12.
true
*/

        if $z0 != 0 goto label1;
/*
 *		12.
true
*/

        $z2 = staticinvoke <constraintBench.utils.Configuration: boolean featureB()>();
/*
 *		17.
(not C1001)
*/

        if $z2 != 0 goto label1;
/*
 *		17.
(not C1001)
*/

        $r2 = <java.lang.System: java.io.PrintStream out>;
/*
 *		13.
(and (not C1001) (not C1002))
*/

        virtualinvoke $r2.<java.io.PrintStream: void println()>();
/*
 *		13.
(and (not C1001) (not C1002))
*/

        return;
/*
 *		14.
(and (not C1001) (not C1002))
*/

     label1:
        $z1 = staticinvoke <constraintBench.utils.Configuration: boolean featureC()>();
/*
 *		15.
(or C1001 C1002)
*/

        if $z1 == 0 goto label2;
/*
 *		15.
(or C1001 C1002)
*/

        $r1 = <java.lang.System: java.io.PrintStream out>;
/*
 *		16.
(and (or C1001 C1002) C1003)
*/

        virtualinvoke $r1.<java.io.PrintStream: void println()>();
/*
 *		16.
(and (or C1001 C1002) C1003)
*/

        return;
/*
 *		17.
(and (or C1001 C1002) C1003)
*/

     label2:
        $r0 = <java.lang.System: java.io.PrintStream out>;
/*
 *		19.
(and (or C1001 C1002) (not C1003))
*/

        virtualinvoke $r0.<java.io.PrintStream: void println()>();
/*
 *		19.
(and (or C1001 C1002) (not C1003))
*/

        return;
/*
 *		20.
(and (or C1001 C1002) (not C1003))
*/
    }
}
