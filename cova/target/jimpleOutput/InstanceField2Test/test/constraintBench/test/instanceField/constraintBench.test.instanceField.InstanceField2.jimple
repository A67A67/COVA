public class constraintBench.test.instanceField.InstanceField2 extends java.lang.Object
{

    public void <init>()
    {
        constraintBench.test.instanceField.InstanceField2 this;

        this := @this: constraintBench.test.instanceField.InstanceField2;

        specialinvoke this.<java.lang.Object: void <init>()>();
/*11*/

        return;
/*11*/
    }

    private void callee(constraintBench.test.instanceField.InstanceField2$Foo)
    {
        constraintBench.test.instanceField.InstanceField2 this;
        constraintBench.test.instanceField.InstanceField2$Foo foo;
        boolean $z0, $z1;
        java.io.PrintStream $r0;
        byte flag;

        this := @this: constraintBench.test.instanceField.InstanceField2;
/*
 *		-1.
true
*/

        foo := @parameter0: constraintBench.test.instanceField.InstanceField2$Foo;
/*
 *		-1.
true
*/

        flag = 0;
/*
 *		19.
true
*/

        $z0 = foo.<constraintBench.test.instanceField.InstanceField2$Foo: boolean a>;
/*
 *		20.
true
*/

        if $z0 == 0 goto label1;
/*
 *		20.
true
*/

        flag = 1;
/*
 *		21.
C1001
*/

     label1:
        $z1 = foo.<constraintBench.test.instanceField.InstanceField2$Foo: boolean b>;
/*
 *		23.
true
*/

        if $z1 == 0 goto label2;
/*
 *		23.
true
*/

        flag = 2;
/*
 *		24.
true
*/

     label2:
        $r0 = <java.lang.System: java.io.PrintStream out>;
/*
 *		26.
true
*/

        virtualinvoke $r0.<java.io.PrintStream: void println(int)>(flag);
/*
 *		26.
true
*/

        return;
/*
 *		27.
true
*/
    }

    public void test()
    {
        constraintBench.test.instanceField.InstanceField2 this;
        constraintBench.test.instanceField.InstanceField2$Foo foo, $r0;
        boolean $z0;

        this := @this: constraintBench.test.instanceField.InstanceField2;
/*
 *		-1.
true
*/

        $r0 = new constraintBench.test.instanceField.InstanceField2$Foo;
/*
 *		30.
true
*/

        specialinvoke $r0.<constraintBench.test.instanceField.InstanceField2$Foo: void <init>(constraintBench.test.instanceField.InstanceField2,constraintBench.test.instanceField.InstanceField2$Foo)>(this, null);
/*
 *		30.
true
*/

        foo = $r0;
/*
 *		30.
true
*/

        $z0 = staticinvoke <constraintBench.utils.Configuration: boolean featureA()>();
/*
 *		31.
true
*/

        foo.<constraintBench.test.instanceField.InstanceField2$Foo: boolean a> = $z0;
/*
 *		31.
true
*/

        specialinvoke this.<constraintBench.test.instanceField.InstanceField2: void callee(constraintBench.test.instanceField.InstanceField2$Foo)>(foo);
/*
 *		32.
true
*/

        return;
/*
 *		33.
true
*/
    }
}
