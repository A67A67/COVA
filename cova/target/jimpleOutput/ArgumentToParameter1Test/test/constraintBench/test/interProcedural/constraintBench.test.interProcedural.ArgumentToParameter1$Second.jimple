class constraintBench.test.interProcedural.ArgumentToParameter1$Second extends java.lang.Object
{
    private int field;
    final constraintBench.test.interProcedural.ArgumentToParameter1 this$0;

    public void <init>(constraintBench.test.interProcedural.ArgumentToParameter1, int)
    {
        constraintBench.test.interProcedural.ArgumentToParameter1$Second this;
        constraintBench.test.interProcedural.ArgumentToParameter1 l1;
        int f;

        this := @this: constraintBench.test.interProcedural.ArgumentToParameter1$Second;
/*
 *		-1.
true
*/

        l1 := @parameter0: constraintBench.test.interProcedural.ArgumentToParameter1;
/*
 *		-1.
true
*/

        f := @parameter1: int;
/*
 *		-1.
true
*/

        this.<constraintBench.test.interProcedural.ArgumentToParameter1$Second: constraintBench.test.interProcedural.ArgumentToParameter1 this$0> = l1;
/*
 *		30.
true
*/

        specialinvoke this.<java.lang.Object: void <init>()>();
/*
 *		30.
true
*/

        this.<constraintBench.test.interProcedural.ArgumentToParameter1$Second: int field> = f;
/*
 *		31.
true
*/

        return;
/*
 *		32.
true
*/
    }

    public int getField()
    {
        constraintBench.test.interProcedural.ArgumentToParameter1$Second this;
        int $i0;

        this := @this: constraintBench.test.interProcedural.ArgumentToParameter1$Second;
/*
 *		-1.
true
*/

        $i0 = this.<constraintBench.test.interProcedural.ArgumentToParameter1$Second: int field>;
/*
 *		35.
true
*/

        return $i0;
/*
 *		35.
true
*/
    }

    public void setField(int)
    {
        constraintBench.test.interProcedural.ArgumentToParameter1$Second this;
        int f;

        this := @this: constraintBench.test.interProcedural.ArgumentToParameter1$Second;
/*
 *		-1.
true
*/

        f := @parameter0: int;
/*
 *		-1.
true
*/

        this.<constraintBench.test.interProcedural.ArgumentToParameter1$Second: int field> = f;
/*
 *		39.
true
*/

        return;
/*
 *		40.
true
*/
    }
}
