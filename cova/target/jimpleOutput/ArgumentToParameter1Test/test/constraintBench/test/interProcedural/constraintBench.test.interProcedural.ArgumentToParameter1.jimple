public class constraintBench.test.interProcedural.ArgumentToParameter1 extends java.lang.Object
{

    public void <init>()
    {
        constraintBench.test.interProcedural.ArgumentToParameter1 this;

        this := @this: constraintBench.test.interProcedural.ArgumentToParameter1;

        specialinvoke this.<java.lang.Object: void <init>()>();
/*9*/

        return;
/*9*/
    }

    public void test()
    {
        constraintBench.test.interProcedural.ArgumentToParameter1 this;
        int d, d1;
        constraintBench.test.interProcedural.ArgumentToParameter1$Second second, $r0;
        constraintBench.test.interProcedural.ArgumentToParameter1$First first, $r1;
        java.io.PrintStream $r2;

        this := @this: constraintBench.test.interProcedural.ArgumentToParameter1;
/*
 *		-1.
true
*/

        d = staticinvoke <constraintBench.utils.Configuration: int featureD()>();
/*
 *		44.
true
*/

        $r0 = new constraintBench.test.interProcedural.ArgumentToParameter1$Second;
/*
 *		45.
true
*/

        specialinvoke $r0.<constraintBench.test.interProcedural.ArgumentToParameter1$Second: void <init>(constraintBench.test.interProcedural.ArgumentToParameter1,int)>(this, d);
/*
 *		45.
true
*/

        second = $r0;
/*
 *		45.
true
*/

        $r1 = new constraintBench.test.interProcedural.ArgumentToParameter1$First;
/*
 *		46.
true
*/

        specialinvoke $r1.<constraintBench.test.interProcedural.ArgumentToParameter1$First: void <init>(constraintBench.test.interProcedural.ArgumentToParameter1,constraintBench.test.interProcedural.ArgumentToParameter1$Second)>(this, second);
/*
 *		46.
true
*/

        first = $r1;
/*
 *		46.
true
*/

        specialinvoke this.<constraintBench.test.interProcedural.ArgumentToParameter1: void callee(constraintBench.test.interProcedural.ArgumentToParameter1$First)>(first);
/*
 *		47.
true
*/

        d1 = virtualinvoke first.<constraintBench.test.interProcedural.ArgumentToParameter1$First: int getField()>();
/*
 *		48.
true
*/

        if d1 <= 10 goto label1;
/*
 *		49.
true
*/

        $r2 = <java.lang.System: java.io.PrintStream out>;
/*
 *		51.
true
*/

        virtualinvoke $r2.<java.io.PrintStream: void println()>();
/*
 *		51.
true
*/

     label1:
        return;
/*
 *		53.
true
*/
    }

    private void callee(constraintBench.test.interProcedural.ArgumentToParameter1$First)
    {
        constraintBench.test.interProcedural.ArgumentToParameter1 this;
        constraintBench.test.interProcedural.ArgumentToParameter1$First first;
        int d2, d3;
        java.io.PrintStream $r0, $r1;

        this := @this: constraintBench.test.interProcedural.ArgumentToParameter1;
/*
 *		-1.
true
*/

        first := @parameter0: constraintBench.test.interProcedural.ArgumentToParameter1$First;
/*
 *		-1.
true
*/

        d2 = virtualinvoke first.<constraintBench.test.interProcedural.ArgumentToParameter1$First: int getField()>();
/*
 *		56.
true
*/

        if d2 <= 20 goto label1;
/*
 *		57.
true
*/

        $r1 = <java.lang.System: java.io.PrintStream out>;
/*
 *		58.
(not (<= C1004 20))
*/

        virtualinvoke $r1.<java.io.PrintStream: void println()>();
/*
 *		58.
(not (<= C1004 20))
*/

     label1:
        virtualinvoke first.<constraintBench.test.interProcedural.ArgumentToParameter1$First: void setField(int)>(10);
/*
 *		60.
true
*/

        d3 = virtualinvoke first.<constraintBench.test.interProcedural.ArgumentToParameter1$First: int getField()>();
/*
 *		61.
true
*/

        if d3 <= 30 goto label2;
/*
 *		62.
true
*/

        $r0 = <java.lang.System: java.io.PrintStream out>;
/*
 *		63.
true
*/

        virtualinvoke $r0.<java.io.PrintStream: void println()>();
/*
 *		63.
true
*/

     label2:
        return;
/*
 *		65.
true
*/
    }
}
