public class constraintBench.test.primTypes.IntegerMultiple1 extends java.lang.Object
{

    public void <init>()
    {
        constraintBench.test.primTypes.IntegerMultiple1 this;

        this := @this: constraintBench.test.primTypes.IntegerMultiple1;

        specialinvoke this.<java.lang.Object: void <init>()>();
/*9*/

        return;
/*9*/
    }

    public void test()
    {
        constraintBench.test.primTypes.IntegerMultiple1 this;
        int d, f;
        java.io.PrintStream $r0, $r1, $r2;

        this := @this: constraintBench.test.primTypes.IntegerMultiple1;
/*
 *		-1.
true
*/

        d = staticinvoke <constraintBench.utils.Configuration: int featureD()>();
/*
 *		12.
true
*/

        f = staticinvoke <constraintBench.utils.Configuration: int featureF()>();
/*
 *		13.
true
*/

        if d != 5 goto label1;
/*
 *		14.
true
*/

        $r0 = <java.lang.System: java.io.PrintStream out>;
/*
 *		15.
(= C1004 5)
*/

        virtualinvoke $r0.<java.io.PrintStream: void println()>();
/*
 *		15.
(= C1004 5)
*/

        if f != 6 goto label1;
/*
 *		16.
(= C1004 5)
*/

        $r1 = <java.lang.System: java.io.PrintStream out>;
/*
 *		17.
(and (= C1004 5) (= C1006 6))
*/

        virtualinvoke $r1.<java.io.PrintStream: void println(int)>(56);
/*
 *		17.
(and (= C1004 5) (= C1006 6))
*/

        if d != f goto label1;
/*
 *		18.
(and (= C1004 5) (= C1006 6))
*/

        $r2 = <java.lang.System: java.io.PrintStream out>;
/*
 *		19.
false
*/

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("dead code");
/*
 *		19.
false
*/

     label1:
        return;
/*
 *		23.
true
*/
    }
}
