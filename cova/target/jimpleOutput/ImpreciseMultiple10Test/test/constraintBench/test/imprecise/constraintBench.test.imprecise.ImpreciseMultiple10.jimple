public class constraintBench.test.imprecise.ImpreciseMultiple10 extends java.lang.Object
{

    public void <init>()
    {
        constraintBench.test.imprecise.ImpreciseMultiple10 this;

        this := @this: constraintBench.test.imprecise.ImpreciseMultiple10;

        specialinvoke this.<java.lang.Object: void <init>()>();
/*10*/

        return;
/*10*/
    }

    public void test()
    {
        constraintBench.test.imprecise.ImpreciseMultiple10 this;
        constraintBench.utils.Property p, q;
        constraintBench.utils.Configuration $r0, $r1;
        int $i0;
        boolean $z0;
        java.io.PrintStream $r2, $r3;

        this := @this: constraintBench.test.imprecise.ImpreciseMultiple10;
/*
 *		-1.
true
*/

        $r0 = new constraintBench.utils.Configuration;
/*
 *		13.
true
*/

        specialinvoke $r0.<constraintBench.utils.Configuration: void <init>()>();
/*
 *		13.
true
*/

        p = virtualinvoke $r0.<constraintBench.utils.Configuration: constraintBench.utils.Property featureP()>();
/*
 *		13.
true
*/

        $r1 = new constraintBench.utils.Configuration;
/*
 *		14.
true
*/

        specialinvoke $r1.<constraintBench.utils.Configuration: void <init>()>();
/*
 *		14.
true
*/

        q = virtualinvoke $r1.<constraintBench.utils.Configuration: constraintBench.utils.Property featureQ()>();
/*
 *		14.
true
*/

        $i0 = virtualinvoke p.<constraintBench.utils.Property: int moreThanCompare(constraintBench.utils.Property)>(q);
/*
 *		15.
true
*/

        if $i0 <= 0 goto label1;
/*
 *		15.
true
*/

        $r3 = <java.lang.System: java.io.PrintStream out>;
/*
 *		16.
(not im(C1010+C1011)_0)
*/

        virtualinvoke $r3.<java.io.PrintStream: void println()>();
/*
 *		16.
(not im(C1010+C1011)_0)
*/

     label1:
        $z0 = virtualinvoke q.<constraintBench.utils.Property: boolean isFeatureEnable()>();
/*
 *		18.
true
*/

        if $z0 == 0 goto label2;
/*
 *		18.
true
*/

        $r2 = <java.lang.System: java.io.PrintStream out>;
/*
 *		19.
C1001
*/

        virtualinvoke $r2.<java.io.PrintStream: void println()>();
/*
 *		19.
C1001
*/

     label2:
        return;
/*
 *		21.
true
*/
    }
}
